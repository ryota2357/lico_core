---
source: crates/parser/tests/inline.rs
---
# func

## Input

```
func foo() end
func() end
```

## CST

```
SOURCE_FILE@0..25
  FUNC_STMT@0..14
    FUNC_KW@0..4 "func"
    WHITESPACE@4..5 " "
    NAME@5..8
      IDENT@5..8 "foo"
    PARAM_LIST@8..10
      OPEN_PAREN@8..9 "("
      CLOSE_PAREN@9..10 ")"
    WHITESPACE@10..11 " "
    END_KW@11..14 "end"
  WHITESPACE@14..15 "\n"
  FUNC_EXPR@15..25
    FUNC_KW@15..19 "func"
    PARAM_LIST@19..21
      OPEN_PAREN@19..20 "("
      CLOSE_PAREN@20..21 ")"
    WHITESPACE@21..22 " "
    END_KW@22..25 "end"
```

## AST

```
SourceFile {
    shebang: none,
    stmt: [
        FuncStmt {
            func_token: FUNC_KW@0..4 "func",
            name: Name {
                ident: IDENT@5..8 "foo",
            },
            param_list: ParamList {
                open_paren_token: OPEN_PAREN@8..9 "(",
                params: [],
                close_paren_token: CLOSE_PAREN@9..10 ")",
            },
            statements: [],
            end_token: END_KW@11..14 "end",
        },
        FuncExpr {
            func_token: FUNC_KW@15..19 "func",
            param_list: ParamList {
                open_paren_token: OPEN_PAREN@19..20 "(",
                params: [],
                close_paren_token: CLOSE_PAREN@20..21 ")",
            },
            statements: [],
            end_token: END_KW@22..25 "end",
        },
    ],
}
```

vim:ft=markdown
